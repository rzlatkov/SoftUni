# Generated by Django 3.2.5 on 2021-08-09 15:06

import base.models
import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only alphabet characters are allowed.'), django.core.validators.MinLengthValidator(3, 'Minimum length of 3 letters required.')])),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile/images/')),
                ('location', models.CharField(blank=True, max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ,-]*$', "Only alphanumeric, '-', ',' and whitespace characters are allowed."), django.core.validators.MinLengthValidator(15, 'Minimum length of 15 letters required.')])),
                ('birth_date', models.DateField(blank=True, help_text='YYYY-MM-DD', null=True, validators=[base.models.no_present_nor_future])),
                ('bio', models.TextField(blank=True)),
                ('facebook_url', models.URLField(blank=True, max_length=255, null=True)),
                ('linkedin_url', models.URLField(blank=True, max_length=255, null=True)),
                ('instagram_url', models.URLField(blank=True, max_length=255, null=True)),
                ('twitter_url', models.URLField(blank=True, max_length=255, null=True)),
                ('github_url', models.URLField(blank=True, max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only alphabet characters are allowed.'), django.core.validators.MinLengthValidator(3, 'Minimum length of 3 letters required.')])),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('date_published', models.DateTimeField(auto_now_add=True)),
                ('snippet', models.CharField(max_length=100)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ManyToManyField(help_text='Select a category for this post.', to='base.Category')),
                ('likes', models.ManyToManyField(blank=True, related_name='blog_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_published',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only alphabet characters are allowed.'), django.core.validators.MinLengthValidator(3, 'Minimum length of 3 letters required.')])),
                ('content', models.TextField()),
                ('date_published', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='base.post')),
            ],
        ),
    ]
